const { EmbedBuilder } = require('discord.js');
const Database = require('../database/database');

module.exports = {
    name: 'guess',
    description: 'ƒêo√°n s·ªë t·ª´ 1-100',
    async execute(message, args, client) {
        const userId = message.author.id;
        const username = message.author.username;

        // T·∫°o user n·∫øu ch∆∞a c√≥
        await Database.createUser(userId, username);

        const targetNumber = Math.floor(Math.random() * 100) + 1;
        let attempts = 0;
        const maxAttempts = 7;

        const embed = new EmbedBuilder()
            .setTitle('üéØ Tr√≤ ch∆°i ƒëo√°n s·ªë!')
            .setDescription(`T√¥i ƒë√£ nghƒ© ra m·ªôt s·ªë t·ª´ **1 ƒë·∫øn 100**.\nB·∫°n c√≥ **${maxAttempts} l·∫ßn ƒëo√°n** ƒë·ªÉ t√¨m ra s·ªë ƒë√≥!\n\nG·ª≠i s·ªë b·∫°n ƒëo√°n v√†o chat.`)
            .setColor('#0099ff')
            .setFooter({ text: 'B·∫°n c√≥ 60 gi√¢y ƒë·ªÉ ho√†n th√†nh!' });

        const gameMessage = await message.reply({ embeds: [embed] });

        const filter = (response) => {
            const num = parseInt(response.content);
            return response.author.id === userId && !isNaN(num) && num >= 1 && num <= 100;
        };

        const collector = message.channel.createMessageCollector({ 
            filter, 
            time: 60000,
            max: maxAttempts
        });

        collector.on('collect', async (guess) => {
            attempts++;
            const userGuess = parseInt(guess.content);

            if (userGuess === targetNumber) {
                // Th·∫Øng
                const reward = Math.max(200 - (attempts * 20), 50);
                const xpGain = Math.max(20 - (attempts * 2), 5);

                await Database.updateUserBalance(userId, reward);
                await Database.updateUserXP(userId, xpGain);
                await Database.updateGameStats(userId, 'guess', 'win');

                const winEmbed = new EmbedBuilder()
                    .setTitle('üéâ CH√çNH X√ÅC!')
                    .setDescription(`S·ªë t√¥i nghƒ© ra l√† **${targetNumber}**!\nB·∫°n ƒë√£ ƒëo√°n ƒë√∫ng trong **${attempts}** l·∫ßn th·ª≠!`)
                    .addFields(
                        { name: 'üí∞ Ph·∫ßn th∆∞·ªüng', value: `${reward} coins`, inline: true },
                        { name: '‚≠ê XP', value: `+${xpGain} XP`, inline: true },
                        { name: 'üéØ L·∫ßn th·ª≠', value: `${attempts}/${maxAttempts}`, inline: true }
                    )
                    .setColor('#00ff00');

                collector.stop();
                return guess.reply({ embeds: [winEmbed] });
            }

            if (attempts >= maxAttempts) {
                // H·∫øt l∆∞·ª£t
                await Database.updateGameStats(userId, 'guess', 'lose');

                const loseEmbed = new EmbedBuilder()
                    .setTitle('üò¢ H·∫øt l∆∞·ª£t ƒëo√°n!')
                    .setDescription(`S·ªë t√¥i nghƒ© ra l√† **${targetNumber}**.\nB·∫°n ƒë√£ d√πng h·∫øt ${maxAttempts} l·∫ßn ƒëo√°n!`)
                    .setColor('#ff0000')
                    .setFooter({ text: 'Th·ª≠ l·∫°i v·ªõi !guess' });

                collector.stop();
                return guess.reply({ embeds: [loseEmbed] });
            }

            // G·ª£i √Ω
            const hint = userGuess < targetNumber ? 'l·ªõn h∆°n' : 'nh·ªè h∆°n';
            const hintEmbed = new EmbedBuilder()
                .setTitle(`${userGuess < targetNumber ? 'üìà' : 'üìâ'} Sai r·ªìi!`)
                .setDescription(`S·ªë t√¥i nghƒ© ra **${hint}** ${userGuess}`)
                .addFields(
                    { name: 'üéØ L·∫ßn th·ª≠', value: `${attempts}/${maxAttempts}`, inline: true },
                    { name: 'üîÑ C√≤n l·∫°i', value: `${maxAttempts - attempts} l·∫ßn`, inline: true }
                )
                .setColor('#ffaa00');

            guess.reply({ embeds: [hintEmbed] });
        });

        collector.on('end', async (collected, reason) => {
            if (reason === 'time') {
                await Database.updateGameStats(userId, 'guess', 'lose');

                const timeoutEmbed = new EmbedBuilder()
                    .setTitle('‚è∞ H·∫øt th·ªùi gian!')
                    .setDescription(`S·ªë t√¥i nghƒ© ra l√† **${targetNumber}**.\nB·∫°n ƒë√£ h·∫øt th·ªùi gian!`)
                    .setColor('#ff0000')
                    .setFooter({ text: 'Th·ª≠ l·∫°i v·ªõi !guess' });

                gameMessage.edit({ embeds: [timeoutEmbed] });
            }
        });
    }
};