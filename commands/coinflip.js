const { EmbedBuilder } = require('discord.js');
const Database = require('../database/database');

module.exports = {
    name: 'coinflip',
    description: 'Tung ƒë·ªìng xu ƒëo√°n m·∫∑t ng·ª≠a/s·∫•p',
    async execute(message, args, client) {
        if (!args[0]) {
            return message.reply('‚ùå Vui l√≤ng ch·ªçn: `!coinflip heads` ho·∫∑c `!coinflip tails`');
        }

        const choices = ['heads', 'tails'];
        const userChoice = args[0].toLowerCase();

        if (!choices.includes(userChoice)) {
            return message.reply('‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá! Ch·ªçn: heads ho·∫∑c tails');
        }

        const userId = message.author.id;
        const username = message.author.username;
        const betAmount = parseInt(args[1]) || 100;

        // T·∫°o user n·∫øu ch∆∞a c√≥
        await Database.createUser(userId, username);
        const user = await Database.getUser(userId);

        if (betAmount < 50) {
            return message.reply('‚ùå S·ªë ti·ªÅn c∆∞·ª£c t·ªëi thi·ªÉu l√† 50 coins!');
        }

        if (user.balance < betAmount) {
            return message.reply('‚ùå B·∫°n kh√¥ng ƒë·ªß ti·ªÅn ƒë·ªÉ c∆∞·ª£c!');
        }

        const result = choices[Math.floor(Math.random() * 2)];
        const won = userChoice === result;

        // C·∫≠p nh·∫≠t balance
        await Database.updateUserBalance(userId, -betAmount); // Tr·ª´ ti·ªÅn c∆∞·ª£c
        if (won) {
            await Database.updateUserBalance(userId, betAmount * 2); // Tr·∫£ g·∫•p ƒë√¥i n·∫øu th·∫Øng
        }

        // C·∫≠p nh·∫≠t stats v√† XP
        await Database.updateGameStats(userId, 'coinflip', won ? 'win' : 'lose');
        const xpGain = won ? 10 : 3;
        await Database.updateUserXP(userId, xpGain);

        const emojis = {
            heads: 'üëë',
            tails: '‚≠ê'
        };

        const embed = new EmbedBuilder()
            .setTitle('ü™ô Tung ƒë·ªìng xu')
            .addFields(
                { name: 'üë§ B·∫°n ch·ªçn', value: `${emojis[userChoice]} ${userChoice}`, inline: true },
                { name: 'üéØ K·∫øt qu·∫£', value: `${emojis[result]} ${result}`, inline: true },
                { name: 'üèÜ Tr·∫°ng th√°i', value: won ? 'üéâ TH·∫ÆNG!' : 'üò¢ THUA!', inline: true },
                { name: 'üí∞ Ti·ªÅn c∆∞·ª£c', value: `${betAmount.toLocaleString()} coins`, inline: true },
                { name: 'üí∏ Thay ƒë·ªïi', value: won ? `+${betAmount.toLocaleString()} coins` : `-${betAmount.toLocaleString()} coins`, inline: true },
                { name: '‚≠ê XP', value: `+${xpGain} XP`, inline: true }
            )
            .setColor(won ? '#00ff00' : '#ff0000')
            .setFooter({ text: 'Ch∆°i l·∫°i v·ªõi !coinflip <heads/tails> [s·ªë ti·ªÅn]' });

        message.reply({ embeds: [embed] });
    }
};