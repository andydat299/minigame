const { EmbedBuilder } = require('discord.js');
const Database = require('../database/database');

const questions = [
    {
        question: "Th·ªß ƒë√¥ c·ªßa Vi·ªát Nam l√† g√¨?",
        options: ["A. H·ªì Ch√≠ Minh", "B. H√† N·ªôi", "C. ƒê√† N·∫µng", "D. C·∫ßn Th∆°"],
        correct: "B",
        answer: "H√† N·ªôi"
    },
    {
        question: "Ai l√† ng∆∞·ªùi ph√°t hi·ªán ra ch√¢u M·ªπ?",
        options: ["A. Marco Polo", "B. Vasco da Gama", "C. Christopher Columbus", "D. Ferdinand Magellan"],
        correct: "C",
        answer: "Christopher Columbus"
    },
    {
        question: "H√†nh tinh n√†o g·∫ßn M·∫∑t tr·ªùi nh·∫•t?",
        options: ["A. Sao Kim", "B. Sao Th·ªßy", "C. Tr√°i ƒê·∫•t", "D. Sao H·ªèa"],
        correct: "B",
        answer: "Sao Th·ªßy"
    },
    {
        question: "Ng√¥n ng·ªØ l·∫≠p tr√¨nh n√†o ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ t·∫°o trang web?",
        options: ["A. Python", "B. Java", "C. JavaScript", "D. C++"],
        correct: "C",
        answer: "JavaScript"
    },
    {
        question: "Ai vi·∫øt ti·ªÉu thuy·∫øt 'S·ªë ƒë·ªè'?",
        options: ["A. Nam Cao", "B. V≈© Tr·ªçng Ph·ª•ng", "C. Ng√¥ T·∫•t T·ªë", "D. Th·∫°ch Lam"],
        correct: "B",
        answer: "V≈© Tr·ªçng Ph·ª•ng"
    },
    {
        question: "Qu·ªëc gia n√†o c√≥ di·ªán t√≠ch l·ªõn nh·∫•t th·∫ø gi·ªõi?",
        options: ["A. Canada", "B. Trung Qu·ªëc", "C. M·ªπ", "D. Nga"],
        correct: "D",
        answer: "Nga"
    },
    {
        question: "1 + 1 = ?",
        options: ["A. 1", "B. 2", "C. 3", "D. 4"],
        correct: "B",
        answer: "2"
    },
    {
        question: "Ai ph√°t minh ra b√≥ng ƒë√®n ƒëi·ªán?",
        options: ["A. Alexander Graham Bell", "B. Thomas Edison", "C. Nikola Tesla", "D. Benjamin Franklin"],
        correct: "B",
        answer: "Thomas Edison"
    }
];

module.exports = {
    name: 'trivia',
    description: 'Tr·∫£ l·ªùi c√¢u h·ªèi vui ƒë·ªÉ ki·∫øm coins',
    async execute(message, args, client) {
        const userId = message.author.id;
        const username = message.author.username;

        // T·∫°o user n·∫øu ch∆∞a c√≥
        await Database.createUser(userId, username);

        const randomQuestion = questions[Math.floor(Math.random() * questions.length)];

        const embed = new EmbedBuilder()
            .setTitle('üß† C√¢u h·ªèi vui!')
            .setDescription(randomQuestion.question)
            .addFields(
                { name: 'C√°c l·ª±a ch·ªçn:', value: randomQuestion.options.join('\n'), inline: false }
            )
            .setColor('#9932cc')
            .setFooter({ text: 'Tr·∫£ l·ªùi b·∫±ng A, B, C, ho·∫∑c D trong 15 gi√¢y!' });

        const questionMessage = await message.reply({ embeds: [embed] });

        const filter = (response) => {
            const answer = response.content.toUpperCase();
            return response.author.id === userId && ['A', 'B', 'C', 'D'].includes(answer);
        };

        const collector = message.channel.createMessageCollector({ 
            filter, 
            time: 15000,
            max: 1
        });

        collector.on('collect', async (answer) => {
            const userAnswer = answer.content.toUpperCase();
            
            if (userAnswer === randomQuestion.correct) {
                // ƒê√∫ng
                const reward = 200;
                const xpGain = 20;

                await Database.updateUserBalance(userId, reward);
                await Database.updateUserXP(userId, xpGain);
                await Database.updateGameStats(userId, 'trivia', 'win');

                const correctEmbed = new EmbedBuilder()
                    .setTitle('üéâ Ch√≠nh x√°c!')
                    .setDescription(`ƒê√°p √°n ƒë√∫ng l√† **${randomQuestion.correct}. ${randomQuestion.answer}**`)
                    .addFields(
                        { name: 'üí∞ Ph·∫ßn th∆∞·ªüng', value: `${reward} coins`, inline: true },
                        { name: '‚≠ê XP', value: `+${xpGain} XP`, inline: true }
                    )
                    .setColor('#00ff00');

                answer.reply({ embeds: [correctEmbed] });
            } else {
                // Sai
                await Database.updateGameStats(userId, 'trivia', 'lose');

                const wrongEmbed = new EmbedBuilder()
                    .setTitle('‚ùå Sai r·ªìi!')
                    .setDescription(`ƒê√°p √°n ƒë√∫ng l√† **${randomQuestion.correct}. ${randomQuestion.answer}**`)
                    .setColor('#ff0000')
                    .setFooter({ text: 'Th·ª≠ l·∫°i v·ªõi !trivia' });

                answer.reply({ embeds: [wrongEmbed] });
            }
        });

        collector.on('end', async (collected, reason) => {
            if (reason === 'time') {
                await Database.updateGameStats(userId, 'trivia', 'lose');

                const timeoutEmbed = new EmbedBuilder()
                    .setTitle('‚è∞ H·∫øt th·ªùi gian!')
                    .setDescription(`ƒê√°p √°n ƒë√∫ng l√† **${randomQuestion.correct}. ${randomQuestion.answer}**`)
                    .setColor('#ff0000')
                    .setFooter({ text: 'Th·ª≠ l·∫°i v·ªõi !trivia' });

                questionMessage.edit({ embeds: [timeoutEmbed] });
            }
        });
    }
};