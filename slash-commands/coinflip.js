const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const Database = require('../database/database');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('coinflip')
        .setDescription('Tung ƒë·ªìng xu ƒëo√°n m·∫∑t ng·ª≠a/s·∫•p')
        .addStringOption(option =>
            option.setName('choice')
                .setDescription('Ch·ªçn m·∫∑t ƒë·ªìng xu')
                .setRequired(true)
                .addChoices(
                    { name: 'üëë Heads (Ng·ª≠a)', value: 'heads' },
                    { name: '‚≠ê Tails (S·∫•p)', value: 'tails' }
                ))
        .addIntegerOption(option =>
            option.setName('bet')
                .setDescription('S·ªë ti·ªÅn c∆∞·ª£c (t·ªëi thi·ªÉu 50 coins)')
                .setMinValue(50)
                .setRequired(false)),
    
    async execute(interaction) {
        const userChoice = interaction.options.getString('choice');
        const betAmount = interaction.options.getInteger('bet') || 100;
        const userId = interaction.user.id;
        const username = interaction.user.username;

        // T·∫°o user n·∫øu ch∆∞a c√≥
        await Database.createUser(userId, username);
        const user = await Database.getUser(userId);

        if (user.balance < betAmount) {
            return interaction.reply({ content: '‚ùå B·∫°n kh√¥ng ƒë·ªß ti·ªÅn ƒë·ªÉ c∆∞·ª£c!', ephemeral: true });
        }

        const choices = ['heads', 'tails'];
        const result = choices[Math.floor(Math.random() * 2)];
        const won = userChoice === result;

        // C·∫≠p nh·∫≠t balance
        await Database.updateUserBalance(userId, -betAmount); // Tr·ª´ ti·ªÅn c∆∞·ª£c
        if (won) {
            await Database.updateUserBalance(userId, betAmount * 2); // Tr·∫£ g·∫•p ƒë√¥i n·∫øu th·∫Øng
        }

        // C·∫≠p nh·∫≠t stats v√† XP
        await Database.updateGameStats(userId, 'coinflip', won ? 'win' : 'lose');
        const xpGain = won ? 10 : 3;
        await Database.updateUserXP(userId, xpGain);

        const emojis = {
            heads: 'üëë',
            tails: '‚≠ê'
        };

        const embed = new EmbedBuilder()
            .setTitle('ü™ô Tung ƒë·ªìng xu')
            .addFields(
                { name: 'üë§ B·∫°n ch·ªçn', value: `${emojis[userChoice]} ${userChoice}`, inline: true },
                { name: 'üéØ K·∫øt qu·∫£', value: `${emojis[result]} ${result}`, inline: true },
                { name: 'üèÜ Tr·∫°ng th√°i', value: won ? 'üéâ TH·∫ÆNG!' : 'üò¢ THUA!', inline: true },
                { name: 'üí∞ Ti·ªÅn c∆∞·ª£c', value: `${betAmount.toLocaleString()} coins`, inline: true },
                { name: 'üí∏ Thay ƒë·ªïi', value: won ? `+${betAmount.toLocaleString()} coins` : `-${betAmount.toLocaleString()} coins`, inline: true },
                { name: '‚≠ê XP', value: `+${xpGain} XP`, inline: true }
            )
            .setColor(won ? '#00ff00' : '#ff0000')
            .setFooter({ text: 'Ch∆°i l·∫°i v·ªõi /coinflip' });

        await interaction.reply({ embeds: [embed] });
    }
};